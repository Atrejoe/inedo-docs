<html>
<head>
    <title>Vor Security</title>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
    <meta name="sequence" content="200" />
    <meta name="subtitle" content="Integrating ProGet with Vor Security" />
    <meta name="keywords" content="proget, vulnerabilities" />
</head>
<body>

    <p class="info">
        You can also check out the <a href="https://www.youtube.com/watch?v=p8YrIuipE1c">Setting up Vor in ProGet</a> video we made with VorSecurity founder and CEO, Ken Duck.
    </p>

    <p>
        Vulnerability scanning is an important practice in upholding compliance standards and ensuring only safe and secure packages are used in your software development process. Combining vulnerability scanning with package management in your toolchain is a key step for faster development while maintaining DevOps best practices.
    </p>

    <h2 id="connect">Connecting to Vor Security </h2>
    <p>
        If you're not a Vor Security user, you'll need to make an account and request a trial license or purchase a professional license. This can be done by visiting <a href="https://vorsecurity.com/">https://vorsecurity.com/</a> and registering an account.
    </p>
    
    <p>
        Once logged into Vor Security you can copy the API token.
    </p>

    <p>
        After retrieving the API token from Vor Security, set it as your Vulnerability Source in ProGet by going to <em>Administration</em> > <em>Manage Vulnerability Sources</em> > <em>Create Vulnerability Source</em>
    </p>
   
    <p>
    </p>
    <p class="info">
        Note that Vor Security only scans third-party packages for vulnerabilities.
    </p>
    <h2 id="managing-assessments">Managing Assessments </h2>
    <p>
        ProGet comes with four built-in assessment types: Caution, Blocked, Ignore and Unassessed.
    </p>
    <ul>
        <li>Caution - Vulnerabilities that may effect some development project but not all</li>
        <li>Blocked - Critical Vulnerabilities that do not meet compliance standards </li>
        <li>Ignore - Minor Vulnerabilities that have little to no impact </li>
        <li>Unassessed - New Vulnerability found, requires user assessment</li>
    </ul>


    <p>
        You can add any additional assessment types that may be needed. Assessment types allow you to control when vulnerable packages can be used and downloaded which helps to ensure compliance standards are met.
    </p>
    <p>
        To create a new Assessment type go <em>Administration</em> > <em>Manage Assessment Types</em> > <em>Create Assessment Type</em>
    </p>
    
    <p class="info">
        When a vulnerability is detected, it is automatically assigned to the unassessed type, and will require user assessment before being usable.
    </p>

    <h2 id="feed-level">Feed Level Configuration </h2>

    <p>  Vulnerability sources are scoped at the feed level and can be added on a feed by feed basis. Since <a href="/support/documentation/proget/administration/security">Security and Privileges</a> are also scoped at the feed level, you are able to permit and restrict access to who is allowed to assess vulnerabilities. </p>
    <p>
        Go to the <em>feeds</em> tab and select a feed to add the vulnerability source to. Then select <em>Manage Feed</em> > <em>add source</em>
    </p>

    <p>
        Once the source is added any package vulnerabilities found will be labeled <i>Unassessed</i>, and will be available for assessment.
    </p>
    <p class="info">
        Note you can also a manually create vulnerability sources to identify and assess in-house packages that have know vulnerabilities.
    </p>

    <h2 id="assess-vuln">Assessing Vulnerabilities</h2>

    <p>
        After you've added a vulnerability source, any known vulnerabilities will be available for assessment. These are viewed by clicking the <i>Vulnerabilities</i> tab.
    </p>
    
    <p>
        Select any of the vulnerabilities listed to view additional details and assign assessment statues. Click <em> assess</em> to select a new assessment type.
    </p>
   
    <p class="info">
        Assessments can have a set expiration which will force reassessment. This ensures that compliance needs are continually addressed and that security standards are upheld as development continues.
    </p>
   
</body>
</html>